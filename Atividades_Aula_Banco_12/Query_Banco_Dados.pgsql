-- -- CREATE DATABASE AT5;


-- CREATE TABLE TabelaEX (
--     NOME VARCHAR(100) NULL
-- );

-- CREATE TABLE TabelaFX (
--     NOME VARCHAR(100) NULL
-- );


-- -- INSERIR DADOS

-- INSERT INTO TabelaEX VALUES ('Claudia');
-- INSERT INTO TabelaEX VALUES ('Cadu');
-- INSERT INTO TabelaEX VALUES ('Bruno');
-- INSERT INTO TabelaEX VALUES ('Lucineia');
-- INSERT INTO TabelaEX VALUES ('Augusto');

-- INSERT INTO TabelaFX VALUES ('Amarildo');
-- INSERT INTO TabelaFX VALUES ('Alvaro');
-- INSERT INTO TabelaFX VALUES ('Bruno');
-- INSERT INTO TabelaFX VALUES ('Damares');
-- INSERT INTO TabelaFX VALUES ('Augusto');


SELECT * from tabelaex;
SELECT * from tabelafx;

SELECT EX.NOME, FX.NOME FROM tabelaex AS EX INNER JOIN tabelafx AS FX ON EX.NOME = FX.NOME;  -- INNER JOIN SERVE PARA COMPARARMOS DUAS TABELAS

SELECT EX.NOME, FX.NOME FROM tabelaex AS EX LEFT JOIN tabelafx AS FX ON EX.NOME = FX.NOME;  -- LEFT JOIN ME RETORNA TODOS OS VALORES DA ESQUERDA, POREM NA OUTRA COLUNA OS VALORES DIFERENTES DA PESQUISA SÃO RETORNADOS NULOS

SELECT EX.NOME, FX.NOME FROM tabelaex AS EX RIGHT JOIN tabelafx AS FX ON EX.NOME = FX.NOME;  -- RIGHT JOIN ME RETORNA TODOS OS VALORES DA DIREITA, POREM NA OUTRA COLUNA OS VALORES DIFERENTES DA PESQUISA SÃO RETORNADOS NULOS

SELECT EX.NOME, FX.NOME FROM tabelaex AS EX LEFT JOIN tabelafx AS FX ON EX.NOME = FX.NOME WHERE FX.nome IS NULL;  -- COM O IS NULL ELE ME RETORNA TODOS OS VALORES QUE SÃO NULOS




